class Hyp:
    def __init__(self, cfg, fixed=False):
        self.TRAIN_BATCH_SIZE = cfg['batch_size']
        self.TEST_BATCH_SIZE = int(cfg['batch_size']/4)
        self.EPOCHS = cfg['max_epochs']
        self.ZDIMS = cfg['zdims']
        self.BETA  = cfg['beta']
        self.SNAPSHOT = cfg['model_snapshot']
        self.LEARNING_RATE = cfg['learning_rate']
        self.NUM_FEATURES = cfg['num_features'] - 2 if fixed else cfg['num_features']
        self.TEMPORAL_WINDOW = cfg['time_window']*2
        self.FUTURE_DECODER = cfg['prediction_decoder']
        self.FUTURE_STEPS = cfg['prediction_steps']
        self.hidden_size_layer_1 = cfg['hidden_size_layer_1']
        self.hidden_size_layer_2 = cfg['hidden_size_layer_2']
        self.hidden_size_rec = cfg['hidden_size_rec']
        self.hidden_size_pred = cfg['hidden_size_pred']
        self.dropout_encoder = cfg['dropout_encoder']
        self.dropout_rec = cfg['dropout_rec']
        self.dropout_pred = cfg['dropout_pred']
        self.noise = cfg['noise']
        self.scheduler_step_size = cfg['scheduler_step_size']
        self.scheduler_thresh = cfg['scheduler_threshold']
        self.softplus = cfg['softplus']
        self.MSE_REC_REDUCTION = cfg['mse_reconstruction_reduction']
        self.MSE_PRED_REDUCTION = cfg['mse_prediction_reduction']
        self.KMEANS_LOSS = cfg['kmeans_loss']
        self.KMEANS_LAMBDA = cfg['kmeans_lambda']
        self.KL_START = cfg['kl_start']
        self.ANNEALTIME = cfg['annealtime']
        self.anneal_function = cfg['anneal_function']
        self.optimizer_scheduler = cfg['scheduler']